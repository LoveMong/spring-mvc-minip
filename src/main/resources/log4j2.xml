<?xml version="1.0" encoding="UTF-8" ?>
<Configuration status="warn">
	<Properties>
		<Property name="LOG_PATTERN">%d{HH:mm:ss.SSSZ} [%t] %-5level %logger{36} - %msg%n</Property>
	</Properties>
	<Appenders>
		<Console name="ConsoleLog" target="SYSTEM_OUT">
			<PatternLayout pattern="${LOG_PATTERN}" charset="UTF-8"/>
		</Console>
	</Appenders>
	<Loggers>
		<Root level="INFO" additivity="false" >
			<AppenderRef ref="console" />
		</Root>

		<!-- log4j2 -->
		<logger name="log4jdbc.log4j2" level="error" additivity="false">
			<appender-ref ref="console" />
		</logger>

		<!-- QUERY LOG -->
		<logger name="jdbc.sqlonly" additivity="false" level="INFO">
			<appender-ref ref="console" />
		</logger>

		<!-- RESULTSET TABLE -->
		<logger name="jdbc.resultsettable" additivity="false" level="INFO">
			<appender-ref ref="console" />
		</logger>

		<!-- query + time -->
		<logger name="jdbc.sqltiming" level="off"/>

		<!-- 전체 로그 ( 양 상당히 많아짐 ) -->
		<logger name="jdbc.audit" level="off"/>

		<!-- resultsettable + resultset (parameter) -->
		<logger name="jdbc.resultset" level="off"/>

		<!-- connection log -->
		<logger name="jdbc.connection" level="off"/>

		<logger name = "com.error" level="INFO" additivity="false" >
			<AppenderRef ref="rolling_error"/>
		</logger>

		<logger name = "com.console" level="INFO" additivity="false">
			<AppenderRef ref="rolling_console"/>
		</logger>
	</Loggers>
</Configuration>


	<!--
	Configuration: 로그 설정을 위한 최상위 요소
	status 속성: Log4j2 내부의 동작에 대한 로깅 레벨을 설정 (log4j 내부 문제를 해결하기 위한 용도의 로깅이 필요한 경우 사용)
	Properties: 하단 설정에 사용할 변수들을 정의
	name: 위 예제에서 name=”LOG_PATTERN”으로 설정하여 LOG_PATTERN이라는 변수를 정의
	Appenders: 로그가 출력되는 위치
	Console: 콘솔에 출력될 로그 설정
	name: 어펜더의 이름
	target: 로그 타겟 (default: SYSTEM_OUT)
	PatternLayout: 로그의 패턴을 설정
	Loggers: 로깅 작업의 주체로 각 패키지 별로 다양한 설정을 할 수 있음
	Root: 모든 패키지에 대한 로깅을 하기 위한 일반적인 로그 정책 설정 (한 개만 설정할 수 있음)
	AppenderRef: 상단에 설정한 Appender를 참조
	-->